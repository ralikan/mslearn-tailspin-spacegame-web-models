pool:
  vmImage: 'Ubuntu-18.04'

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '3.1.300'
  packageVersion: '2.0.1'

steps:

- task: PowerShell@2
  inputs:
    displayName: 'Set package version environment variable'
    targetType: 'inline'
    script: |
      Write-Host "Current set version is $(packageVersion)"
      [Environment]::SetEnvironmentVariable("EnvPackageVersion", "$(packageVersion)", "User")

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Pack the project - $(buildConfiguration)'
  inputs:
    command: 'pack'
    projects: '**/*.csproj'
    arguments: '--no-build --configuration $(buildConfiguration)'
    versioningScheme: byEnvVar
    versionEnvVar: 'EnvPackageVersion'
 
- task: NuGetCommand@2
  displayName: 'Publish NuGet package'
  inputs:
    command: push
    feedsToUse: 'select'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    vstsFeed: 'Tailspin.SpaceGame.Web.Models.New'
    publishVstsFeed: 'Tailspin.SpaceGame.Web.Models.New'
    allowPackageConflicts: true
  condition: succeeded()